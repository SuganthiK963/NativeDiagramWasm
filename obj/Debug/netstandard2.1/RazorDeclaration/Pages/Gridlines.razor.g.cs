// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace WasmNativeImplementation.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using WasmNativeImplementation;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using WasmNativeImplementation.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\Pages\Gridlines.razor"
using Syncfusion.Blazor.Diagrams.Wasm;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\Pages\Gridlines.razor"
using System.Collections.ObjectModel;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Gridlines")]
    public partial class Gridlines : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 22 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\Pages\Gridlines.razor"
      
    HorizontalGridLines HGridline;
    VerticalGridLines VGridline;
    private async Task UpdateHeading(MouseEventArgs e)
    {

    }
    SfDiagramWasm diagram;
    public double[] HDotInterval { get; set; } = new double[] { 3, 20, 1, 20, 1, 20 };
    public double[] VDotInterval { get; set; } = new double[] { 3, 20, 1, 20, 1, 20, 1, 20, 1, 20 };
    public double[] HInterval { get; set; } = new double[] { 1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75 };
    public double[] VInterval { get; set; } = new double[] { 1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75 };
    public string Hlinecolor { get; set; } = "red";
    public string Vlinecolor { get; set; } = "red";

    DiagramObjectCollection<object> basicElements = new DiagramObjectCollection<object>();

    GridType type = GridType.Lines;

    public async Task onclick()
    {

        type = type == GridType.Dots ? GridType.Lines : GridType.Dots;
        Hlinecolor = Hlinecolor == "green" ? "blue" : "green";
        Vlinecolor = Vlinecolor == "green" ? "blue" : "green";


    }


    protected override void OnInitialized()
    {
        Canvas element = new Canvas();
        element.Pivot = new Point() { X = 1, Y = 1 };
        element.OffsetX = 200;
        element.OffsetY = 200;
        element.Width = 200;
        element.Height = 200;

        basicElements.Add(element);
    }
    private void ChangeSnap()
    {
        HDotInterval = HDotInterval.Length < 8 ? new double[] { 1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75 } : new double[] { 3, 20, 1, 20, 1, 20 };
        VDotInterval = VDotInterval.Length < 8 ? new double[] { 1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75 } : new double[] { 3, 20, 1, 20, 1, 20 };
    }
    private void ChangeSnapColor()
    {
        Hlinecolor = string.Equals(Hlinecolor, "Yellow") ? "Blue" : "Yellow"; ;
        Vlinecolor = string.Equals(Vlinecolor, "Yellow") ? "Blue" : "Yellow";
    }

    string data;
    private void Save()
    {
        //data = diagram.Save();
    }
    private async void Load()
    {
        //await diagram.Load(data);
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
