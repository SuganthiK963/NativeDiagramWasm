#pragma checksum "D:\Diagram Blazor\GitHub\NativeDiagramWasm\Pages\Datasource\DynamicObj.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "58af86e0ab115364e4d7e9084ec39f33e31416e9"
// <auto-generated/>
#pragma warning disable 1591
namespace WasmNativeImplementation.Pages.Datasource
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using WasmNativeImplementation;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\_Imports.razor"
using WasmNativeImplementation.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\Pages\Datasource\DynamicObj.razor"
using Syncfusion.Blazor.Diagrams.Wasm;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\Pages\Datasource\DynamicObj.razor"
using System.Dynamic;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/DynamicObject")]
    public partial class DynamicObj : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.OpenComponent<Syncfusion.Blazor.Diagrams.Wasm.SfDiagramWasm>(0);
            __builder.AddAttribute(1, "Id", "diagram");
            __builder.AddAttribute(2, "Width", "1000px");
            __builder.AddAttribute(3, "Height", "500px");
            __builder.AddAttribute(4, "NodeDefaults", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Diagrams.Wasm.IDiagramObject>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Syncfusion.Blazor.Diagrams.Wasm.IDiagramObject>(this, 
#nullable restore
#line 8 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\Pages\Datasource\DynamicObj.razor"
                             NodeDefaults

#line default
#line hidden
#nullable disable
            )));
            __builder.AddAttribute(5, "ConnectorDefaults", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Diagrams.Wasm.IDiagramObject>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Syncfusion.Blazor.Diagrams.Wasm.IDiagramObject>(this, 
#nullable restore
#line 8 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\Pages\Datasource\DynamicObj.razor"
                                                              ConnectorDefaults

#line default
#line hidden
#nullable disable
            )));
            __builder.AddAttribute(6, "SetNodeTemplate", new System.Func<Syncfusion.Blazor.Diagrams.Wasm.IDiagramObject, Syncfusion.Blazor.Diagrams.Wasm.ICommonElement>(
#nullable restore
#line 8 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\Pages\Datasource\DynamicObj.razor"
                                                                                                  SetTemplate

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(7, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.AddMarkupContent(8, "\r\n    ");
                __builder2.OpenElement(9, "DataSourceSetting");
                __builder2.AddAttribute(10, "DataSource", "DataSource");
                __builder2.AddAttribute(11, "Id", "Name");
                __builder2.AddAttribute(12, "ParentId", "Category");
                __builder2.AddMarkupContent(13, "\r\n    ");
                __builder2.CloseElement();
                __builder2.AddMarkupContent(14, "\r\n    ");
                __builder2.OpenComponent<Syncfusion.Blazor.Diagrams.Wasm.ScrollSettings>(15);
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(16, "\r\n");
            }
            ));
            __builder.AddComponentReferenceCapture(17, (__value) => {
#nullable restore
#line 7 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\Pages\Datasource\DynamicObj.razor"
                     Diagram = (Syncfusion.Blazor.Diagrams.Wasm.SfDiagramWasm)__value;

#line default
#line hidden
#nullable disable
            }
            );
            __builder.CloseComponent();
        }
        #pragma warning restore 1998
#nullable restore
#line 13 "D:\Diagram Blazor\GitHub\NativeDiagramWasm\Pages\Datasource\DynamicObj.razor"
       
    SfDiagramWasm Diagram;
    float x = 100;
    float y = 100;
    List<DynamicDictionary> DataSource = new List<DynamicDictionary>();

    protected override void OnInitialized()
    {
        dynamic d = new DynamicDictionary();
        d.Name = "Diagram";
        d.Category = "";
        d.FillColor = "#659be5";

        DataSource.Add(d);
        d = new DynamicDictionary();
        d.Name = "Layout";
        d.Category = "Diagram";
        d.FillColor = "#659be5";

        DataSource.Add(d);
        d = new DynamicDictionary();
        d.Name = "Organizational chart";
        d.Category = "Diagram";
        d.FillColor = "#659be5";

        DataSource.Add(d);
        d = new DynamicDictionary();
        d.Name = "Tree layout";
        d.Category = "Layout";
        d.FillColor = "#659be5";

        DataSource.Add(d);
        d = new DynamicDictionary();
        d.Name = "Hierarchical tree";
        d.Category = "Tree layout";
        d.FillColor = "#659be5";

        DataSource.Add(d);


        //new HierarchicalDetails() { Name = "Diagram", Category = "", FillColor = "#659be5" },
        //new HierarchicalDetails() { Name = "Layout", Category = "Diagram", FillColor = "#659be5" },
        //new HierarchicalDetails() { Name = "Organizational chart", Category = "Diagram", FillColor = "#659be5" },
        //new HierarchicalDetails() { Name = "Tree layout", Category = "Layout", FillColor = "#659be5" },
        //new HierarchicalDetails() { Name = "Hierarchical tree", Category = "Tree layout", FillColor = "#659be5" },
        base.OnInitialized();
    }
    private void NodeDefaults(IDiagramObject obj)
    {
        Node node = obj as Node;
        node.OffsetX = x;
        node.OffsetY = y;
        x += 100;

        //DynamicDictionary hierarchicalData = node.Data as DynamicDictionary;
        //node.Style.Fill = hierarchicalData.FillColor;
        //node.Annotations = new DiagramObjectCollection<ShapeAnnotation>()
        //{
        //    new ShapeAnnotation()
        //    {
        //        Content = hierarchicalData.Name
        //    }
        //};
    }
    private void ConnectorDefaults(IDiagramObject connector)
    {

    }
    private ICommonElement SetTemplate(IDiagramObject node)
    {
        return null;
    }
    public class DynamicDictionary : System.Dynamic.DynamicObject
    {
        Dictionary<string, object> dictionary = new Dictionary<string, object>();

        public override bool TryGetMember(GetMemberBinder binder, out object result)
        {
            string name = binder.Name;
            return dictionary.TryGetValue(name, out result);
        }
        public override bool TrySetMember(SetMemberBinder binder, object value)
        {
            dictionary[binder.Name] = value;
            return true;
        }

        public override System.Collections.Generic.IEnumerable<string> GetDynamicMemberNames()
        {
            return this.dictionary?.Keys;
        }

    }
    //public class HierarchicalDetails
    //{
    //    public string Name { get; set; }
    //    public string FillColor { get; set; }
    //    public string Category { get; set; }
    //}

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
