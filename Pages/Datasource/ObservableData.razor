@page "/ObservableData"

@using Syncfusion.Blazor.Diagrams.Wasm
@using Syncfusion.Blazor.Data
@using System.Collections.ObjectModel

<div style="width:100%">
    <div style="width:70%">
        <input type="button" value="Add" @onclick="Add" />
        <input type="button" value="Remove" @onclick="Remove" />
        <input type="button" value="Reset" @onclick="Reset" />
        <input type="button" value="Modify" @onclick="Modify" />
        <SfDiagramWasm @ref="Diagram" Id="diagram" Width="1000px" Height="500px"
                       NodeDefaults="NodeDefaults" ConnectorDefaults="ConnectorDefaults" SetNodeTemplate="SetTemplate">
            <DataSourceSettings DataSource="DataSource" Id="Name" ParentId="Category">
                @* <SfDataManager Url="https://services.odata.org/V4/Northwind/Northwind.svc/Employees" Adaptor="Syncfusion.Blazor.Adaptors.ODataV4Adaptor"></SfDataManager>*@
            </DataSourceSettings>
            <ScrollSettings></ScrollSettings>
        </SfDiagramWasm>
    </div>
</div>
@code{
    SfDiagramWasm Diagram;

    float x = 100;
    float y = 100;
    Query Query = new Query().Select(new List<string>() { "EmployeeID", "ReportsTo", "FirstName" }).Take(9);
    public class HierarchicalDetails
    {
        public string Name { get; set; }
        public string FillColor { get; set; }
        public string Category { get; set; }
    }
    public ObservableCollection<HierarchicalDetails> DataSource = new ObservableCollection<HierarchicalDetails>()
{
        new HierarchicalDetails(){ Name ="Diagram", Category="",FillColor="#659be5"},
        new HierarchicalDetails(){ Name ="Layout", Category="Diagram",FillColor="#659be5"},
        new HierarchicalDetails(){ Name ="Organizational chart", Category="Diagram",FillColor="#659be5"},
        new HierarchicalDetails(){ Name ="Tree layout", Category="Layout",FillColor="#659be5"},
        new HierarchicalDetails(){ Name ="Hierarchical tree", Category="Tree layout",FillColor="#659be5"},
        //new HierarchicalDetails(){ Name ="Mind map", Category="Hierarchical tree",FillColor="#659be5"},
        //new HierarchicalDetails(){ Name ="Family tree", Category="Hierarchical tree",FillColor="#659be5"},
        //new HierarchicalDetails(){ Name ="Management", Category="Organizational chart",FillColor="#659be5"},
        //new HierarchicalDetails(){ Name ="Human resources", Category="Management",FillColor="#659be5"},
        //new HierarchicalDetails(){ Name ="University", Category="Management",FillColor="#659be5"},
        //new HierarchicalDetails(){ Name ="Business", Category="#Management",FillColor="#659be5"}
    };

    private void NodeDefaults(IDiagramObject obj)
    {
        Node node = obj as Node;
        node.OffsetX = x;
        node.OffsetY = y;
        x += 100;

        HierarchicalDetails hierarchicalData = node.Data as HierarchicalDetails;
        node.Style.Fill = hierarchicalData.FillColor;
        node.Annotations = new DiagramObjectCollection<ShapeAnnotation>()
    {
            new ShapeAnnotation()
            {
                Content = hierarchicalData.Name
            }
        };
    }
    private void ConnectorDefaults(IDiagramObject connector)
    {

    }
    private ICommonElement SetTemplate(IDiagramObject node)
    {
        return null;
    }

    private void Add()
    {
        DataSource.Add(
        new HierarchicalDetails() { Name = "Radial tree", Category = "Tree layout", FillColor = "#659be5" });
        x = 100; y = 100;
        Diagram.RefreshDataSource();
    }
    private void Remove()
    {
        DataSource.Remove(DataSource[4]);
        x = 100; y = 100;
        Diagram.RefreshDataSource();
    }
    private async Task Reset()
    {
        x = 200; y = 200;
        DataSource = new ObservableCollection<HierarchicalDetails>()
    {
            new HierarchicalDetails(){ Name ="Diagram1", Category="",FillColor="#659be5"},
            new HierarchicalDetails(){ Name ="Layout", Category="Diagram1",FillColor="#659be5"},
            new HierarchicalDetails(){ Name ="Organizational chart", Category="Diagram1",FillColor="#659be5"},
            new HierarchicalDetails(){ Name ="Tree layout", Category="Layout",FillColor="#659be5"},
            new HierarchicalDetails(){ Name ="Hierarchical tree", Category="Tree layout",FillColor="#659be5"},
            new HierarchicalDetails(){ Name ="Mind map", Category="Hierarchical tree",FillColor="#659be5"},
            new HierarchicalDetails(){ Name ="Family tree", Category="Hierarchical tree",FillColor="#659be5"},
            new HierarchicalDetails(){ Name ="Management", Category="Organizational chart",FillColor="#659be5"},
            new HierarchicalDetails(){ Name ="Human resources", Category="Management",FillColor="#659be5"},
            new HierarchicalDetails(){ Name ="University", Category="Management",FillColor="#659be5"},
            new HierarchicalDetails(){ Name ="Business", Category="#Management",FillColor="#659be5"}
        };
        //await Diagram.RefreshDataSource();
    }
    private async Task Modify()
    {
        x = 100; y = 100;
        DataSource[0].FillColor = "red";
        await Diagram.RefreshDataSource();
        StateHasChanged();
    }
}
