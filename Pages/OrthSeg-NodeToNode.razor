@page "/OrthoSegment/NodeToNode"

@using Syncfusion.Blazor.Diagrams.Wasm
@using System.Collections.ObjectModel

<SfDiagramWasm ID="diagram" Width="1000px" Height="1000px" Nodes="@nodes" Connectors="@connectors"></SfDiagramWasm>

@code{

    DiagramObjectCollection<Connector> connectors = new DiagramObjectCollection<Connector>();

    DiagramObjectCollection<Node> nodes = new DiagramObjectCollection<Node>();

    protected override void OnInitialized()
    {
        int count = 1; int offsetY = 100; int offsetX = 100;
        for (var i = 0; i < 9; i++)
        {
            Node node = new Node
            {
                ID = "node" + i,
                OffsetX = ((count) * offsetX),
                OffsetY = offsetY,
                Width = 50,
                Height = 50,
                Ports = new DiagramObjectCollection<PointPort>()
                    {
                            new PointPort(){ID="port1", Offset=new Point{X=0, Y=0.5}, Visibility=PortVisibility.Visible},
                            new PointPort(){ID="port2", Offset=new Point{X=0.5, Y=0}, Visibility=PortVisibility.Visible},
                            new PointPort(){ID="port3", Offset=new Point{X=1, Y=0.5}, Visibility=PortVisibility.Visible},
                            new PointPort(){ID="port4", Offset=new Point{X=0.5, Y=1}, Visibility=PortVisibility.Visible},
                        }
            };
            if (node.ID == "node1")
            {
                node.OffsetX = 550; node.OffsetY = 250;
            }
            else if (node.ID == "node3")
            {
                node.OffsetX = 250; node.OffsetY = 250;
            }
            else if (node.ID == "node5")
            {
                node.OffsetX = 550; node.OffsetY = 400;
            }
            else if (node.ID == "node7")
            {
                node.OffsetX = 250; node.OffsetY = 400;
            }
            if (node.ID != "node4")
                nodes.Add(node);
            count += 3;
            if (count == 10)
            {
                count = 1;
                offsetX = 100;
                offsetY = offsetY + 200;
            }
        }
        Direction[] dir = new Direction[] { Direction.Right, Direction.Left, Direction.Top, Direction.Bottom };
        string[] ports = new string[] { "port1", "port2", "port3", "port4" };
        string[] targetNodes = new string[] { "node0", "node2", "node6", "node8" };
        string[] sourceNodes = new string[] { "node3", "node1", "node7", "node5" };
        int con = 0;
        for (int i = 0; i < sourceNodes.Length; i++)
        {
            //for (var k = 0; k < ports.Length; k++)
            //{
            //    for (var l = 0; l < ports.Length; l++)
            //    {
            for (int j = 0; j < dir.Length; j++)
            {
                Connector connector = new Connector
                {
                    ID = "connector" + con,
                    Type = Segments.Orthogonal,
                    TargetID = targetNodes[i],
                    SourceID = sourceNodes[i],
                    //SourcePortID = ports[k],
                    //TargetPortID = ports[l],
                    //Segments = new DiagramObjectCollection<ConnectorSegment>(){
                    //    new OrthogonalSegment { Type= Segments.Orthogonal, Direction= dir[j], Length= 50 }
                    //},
                    //TargetPadding = 20, SourcePadding = 20,
                };
                //if(con == 18)
                connectors.Add(connector);
                con++;
            }
            //    }
            //}
        }

    }

}